// <auto-generated />
using Auto666.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Auto666.Api.Migrations
{
    [DbContext(typeof(Auto666DbContext))]
    [Migration("20230406212610_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Auto666.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Horses")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            City = "Харкiв",
                            Description = "Улюблена машина, але хочеться щось комфортніше. Стік, механіка w58, блокування. Є недоліки по кузову, розмова у капота, торг можливий",
                            FuelType = "Бензин",
                            Horses = 225,
                            ImageURL = "/Images/Cars/ToyotaSupra/ToyotaSupra1.jpg",
                            Mark = "Supra",
                            Model = "Toyota",
                            Name = "Toyota Supra",
                            Price = 29000,
                            Range = 175000,
                            Transmission = "Механiчна",
                            Volume = 3.0,
                            Year = 1993
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            City = "Полтава",
                            Description = "Автомобіль із Канади! Без пробігу Україною.\r\nМашина у відмінному стані. Обслуговувалась у офіційного дилера. Рідний пробіг!\r\nПовністю розмитнений. Ви будете першим власником!\r\nАвтомобіль вкладень не вимагає. Будь-які перевірки лише вітаються.",
                            FuelType = "Бензин",
                            Horses = 268,
                            ImageURL = "/Images/Cars/SubaruWRX/SubaruWRX1.jpg",
                            Mark = "WRX",
                            Model = "Subaru",
                            Name = "Subaru WRX",
                            Price = 29000,
                            Range = 56000,
                            Transmission = "Механiчна",
                            Volume = 2.0,
                            Year = 2018
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            City = "Київ",
                            Description = "Автомобіль пройшов повну технічну діагностику, дітейлінг салону/кузова та готовий до подальшої експлуатації\r\nАбсолютно кожен автомобіль проходить ретельну перевірку ",
                            FuelType = "Бензин",
                            Horses = 333,
                            ImageURL = "/Images/Cars/InfinitiG37/InfinitiG371.jpg",
                            Mark = "G37",
                            Model = "Infiniti",
                            Name = "Infiniti G37",
                            Price = 13000,
                            Range = 239000,
                            Transmission = "Автоматична",
                            Volume = 2.0,
                            Year = 2008
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            City = "Київ",
                            Description = "Стайлінг AMG: передній спойлер, накладки порогів\r\nОббивка зі шкіри наппа\r\nАкустична система об'ємного звучання Burmester? 3D\r\nМультимедійна система MBUX High-End для задніх пасажирів\r\nЦентральний OLED-дисплей\r\nHANDS-FREE ACCESS\r\nСерводівник\r\nОкреме блокування кришки багажника\r\nСистема KEYLESS-GO із вбудованими заподлицо ручками дверей",
                            FuelType = "Дизель",
                            Horses = 249,
                            ImageURL = "/Images/Cars/MercedesS350d/MercedesS350d1.jpg",
                            Mark = "S-клас 350d Long",
                            Model = "Mercedes-Benz",
                            Name = "Mercedes-Benz S-клас 350d Long",
                            Price = 130000,
                            Range = 59000,
                            Transmission = "Автоматична",
                            Volume = 2.8999999999999999,
                            Year = 2020
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            City = "Одеса",
                            Description = "Пишу для тих хто не розуміє. Птс 150лс, за фактом 180лс (маленький податок)\r\nДвигун 1jz-об'єм 2.5-потужність 150 л. с. за фактом 180 л. с (ввезений із заниженням сил розмитнення)\r\nПроблем з урахуванням ні яких немає\r\n(можу бути присутнім у гібдд)\r\nМашина робилася собі. так що можна не перейматися володінням все відмінно (відновлював більше року)\r\nПродаж від власника",
                            FuelType = "Бензин",
                            Horses = 180,
                            ImageURL = "/Images/Cars/ToyotaMark2/ToyotaMark1.jpg",
                            Mark = "Mark 2",
                            Model = "Toyota",
                            Name = "Toyota Mark 2",
                            Price = 6100,
                            Range = 230000,
                            Transmission = "Автоматична",
                            Volume = 2.5,
                            Year = 1995
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            City = "Лвiв",
                            Description = "Шукаєте Mazda 6 із пробігом на особливих умовах? Офіційному дилеру РОЛЬФ Львів | Авто з пробігом є, що Вам запропонувати!\r\nОфіційний дилер РОЛЬФ Львів | Автомобілі з пробігом пропонує Вам Mazda 6 з проведеною технічною та юридичною перевіркою. Ми гарантуємо індивідуальні умови при купівлі та/або обміні на Ваш автомобіль.\r\nМи гарантуємо індивідуальні умови при купівлі та/або обміні на Ваш автомобіль.\r\nТакож цілих 2 роки гарантії РОЛЬФ *",
                            FuelType = "Дизель",
                            Horses = 184,
                            ImageURL = "/Images/Cars/Mazda6/Mazda61.jpg",
                            Mark = "6",
                            Model = "Mazda",
                            Name = "Mazda 6",
                            Price = 30000,
                            Range = 84000,
                            Transmission = "Автоматична",
                            Volume = 2.2000000000000002,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Auto666.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fas fa-champagne-glasses",
                            Name = "Седан"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fas fa-wine-bottle",
                            Name = "Купе"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fas fa-champagne-glasses",
                            Name = "Унiверсал"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "fas fa-wine-bottle",
                            Name = "Кросовер"
                        });
                });

            modelBuilder.Entity("Auto666.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Kyrylo"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Dmytro"
                        });
                });

            modelBuilder.Entity("Auto666.Api.Entities.Product", b =>
                {
                    b.HasOne("Auto666.Api.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
